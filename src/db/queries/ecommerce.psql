WITH
    aggregated_Sales AS  (
        SELECT
            DATE_TRUNC('month', payment_date) as sale_month,
            json_agg(items) as "Monthly Items Sold"
        FROM
            surtrics.surplus_sales_data
        GROUP BY
            sale_month,
            items

    ),

    increments as (
        SELECT
            COUNT(*) as transactions,
            date_trunc('month',transaction_date) as date_of_transaction
        FROM
            surtrics.surplus_metrics_data
        WHERE
            transaction_type = 'Add'
          AND(
              transaction_reason = 'Add'
          OR transaction_reason = 'Add on Receiving'
          OR transaction_reason = 'Relisting'
              )
        GROUP BY
            date_of_transaction

    )
SELECT
    DATE_TRUNC('month', sed.date_for_week) as "Month",
    SUM(impressions) as "Monthly Impressions",
    SUM(page_views) as "Monthly Page Views",
    -- monthly_ebay sales will be calculated by summing the sales from the sales table
    SUM(visits) as "Monthly Visits",
    -- monthly_bigcommerce sales will be calculated by summing the sales from the sales table

    -- Month over Month Stats will be calculated on the front end
    --todo quickbooks will be added later
    --Not going to add transaction query here as it is too slow
    array_agg("Monthly Items Sold"),
    SUM(web_leads) as "Monthly Web Leads",
    relisting.transactions as "Monthly Relisting Transactions",
    new_listing.transactions as "Monthly New Listing Transactions",
    increments.transactions as "Monthly Increment Transactions"
FROM
    surtrics.surplus_big_commerce_data
INNER JOIN surtrics.surplus_ebay_data sed on surplus_big_commerce_data.date_for_week = sed.date_for_week
LEFT JOIN aggregated_Sales ON DATE_TRUNC('month', sale_month) = DATE_TRUNC('month', sed.date_for_week)
LEFT JOIN relisting ON relisting.date_of_transaction = DATE_TRUNC('month', sed.date_for_week)
LEFT JOIN new_listing ON new_listing.date_of_transaction = DATE_TRUNC('month', sed.date_for_week)
LEFT JOIN increments ON increments.date_of_transaction = DATE_TRUNC('month', sed.date_for_week)
GROUP BY
    "Month",
    increments.transactions,
    new_listing.transactions,
    relisting.transactions,
    "Monthly Items Sold"
ORDER BY
    "Month";




SELECT
    DATE_TRUNC('month', payment_date) as sale_month,
    -- items is a array of strings that can be converted to json
    json_agg(items) as "Monthly Items Sold agg"
FROM
    surtrics.surplus_sales_data
GROUP BY
    sale_month